generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String          @id @default(uuid())
  email        String          @unique
  passwordHash String
  displayName  String?
  createdAt    DateTime        @default(now())
  updatedAt    DateTime        @updatedAt
  lastLogin    DateTime?
  isVerified   Boolean         @default(false)
  role         String          @default("user")
  gameSessions GameSession[]
  preferences  UserPreference?
}

model UserPreference {
  id                   String   @id @default(uuid())
  userId               String   @unique
  difficulty           String?
  theme                String?
  notificationSettings Json?
  uiPreferences        Json?
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
  user                 User     @relation(fields: [userId], references: [id])
}

model Location {
  id          String               @id @default(uuid())
  name        String
  description String?
  latitude    Decimal              @db.Decimal(10, 8)
  longitude   Decimal              @db.Decimal(11, 8)
  difficulty  Int?
  createdAt   DateTime             @default(now())
  updatedAt   DateTime             @updatedAt
  guesses     Guess[]
  images      LocationImage[]
  sets        LocationSetMapping[]
}

model LocationSet {
  id           String               @id @default(uuid())
  name         String
  description  String?
  difficulty   Int?
  createdAt    DateTime             @default(now())
  updatedAt    DateTime             @updatedAt
  gameSessions GameSession[]
  locations    LocationSetMapping[]
}

model LocationSetMapping {
  locationId String
  setId      String
  position   Int
  location   Location    @relation(fields: [locationId], references: [id])
  set        LocationSet @relation(fields: [setId], references: [id])

  @@id([locationId, setId])
}

model LocationImage {
  id         String   @id @default(uuid())
  locationId String
  url        String
  isPrimary  Boolean  @default(false)
  width      Int?
  height     Int?
  format     String?
  createdAt  DateTime @default(now())
  location   Location @relation(fields: [locationId], references: [id])
}

model GameSession {
  id          String      @id @default(uuid())
  userId      String
  setId       String
  startedAt   DateTime    @default(now())
  completedAt DateTime?
  difficulty  String?
  totalScore  Int         @default(0)
  status      String      @default("in_progress")
  set         LocationSet @relation(fields: [setId], references: [id])
  user        User        @relation(fields: [userId], references: [id])
  guesses     Guess[]
}

model Guess {
  id         String      @id @default(uuid())
  sessionId  String
  locationId String
  guessedLat Decimal     @db.Decimal(10, 8)
  guessedLng Decimal     @db.Decimal(11, 8)
  distanceKm Decimal     @db.Decimal(10, 2)
  score      Int
  timeTaken  Int
  hintsUsed  Int         @default(0)
  createdAt  DateTime    @default(now())
  location   Location    @relation(fields: [locationId], references: [id])
  session    GameSession @relation(fields: [sessionId], references: [id])
}
